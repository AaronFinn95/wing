---
source: libs/wingc/src/jsify/captures/tests.rs
expression: "capture_ok(r#\"\n    inflight class MyType {\n      field: str;\n      init() { this.field = \"hi\"; }\n  \n      getField(): str {\n        return this.field;\n      }\n    }\n  \"#)"
---
======================================================
Files:

inflight.MyType.js
------------------------------------------------------
module.exports = function({  }) {
  class MyType {
    constructor()  {
      this.field = "hi";
    }
    async getField()  {
      return this.field;
    }
  }
  return MyType;
}

preflight.js
------------------------------------------------------
class MyType extends $stdlib.std.Resource {
  constructor(scope, id, ) {
    super(scope, id);
    this._addInflightOps("getField", "field");
  }
  static _toInflightType(context) {
    return $stdlib.core.NodeJsCode.fromInline(`
      require("./inflight.MyType.js")({ 
      })
    `);
  }
  _toInflight() {
    return $stdlib.core.NodeJsCode.fromInline(`
      (await (async () => {
        const client = new (${MyType._toInflightType(this).text})({
        });
        if (client.$inflight_init) { await client.$inflight_init(); }
        return client;
      })())
    `);
  }
}


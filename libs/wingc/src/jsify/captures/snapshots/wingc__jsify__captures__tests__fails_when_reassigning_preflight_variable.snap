---
source: libs/wingc/src/jsify/captures/tests.rs
expression: "capture_fail(r#\"\n    let var a = \"hello\";\n    inflight () => {\n      a = \"world\";\n    };\n    \"#)"
---
======================================================
Errors:
 - at 3:6 | Variable cannot be reassigned from inflight
======================================================
Files:

inflight.$Closure1.js
------------------------------------------------------
module.exports = function({ $a }) {
  class $Closure1 {
    async handle()  {
      $a = "world";
    }
    constructor({  }) {
      const $obj = (...args) => this.handle(...args);
      Object.setPrototypeOf($obj, this);
      return $obj;
    }
  }
  return $Closure1;
}

preflight.js
------------------------------------------------------
class $Closure1 extends $stdlib.std.Resource {
  constructor(scope, id, ) {
    super(scope, id);
    this._addInflightOps("handle");
    this.display.hidden = true;
  }
  static _toInflightType(context) {
    const $a = context._lift(a);
    return $stdlib.core.NodeJsCode.fromInline(`
      require("./inflight.$Closure1.js")({ 
        $a: ${$a},
      })
    `);
  }
  _toInflight() {
    return $stdlib.core.NodeJsCode.fromInline(`
      (await (async () => {
        const client = new (${$Closure1._toInflightType(this).text})({
        });
        if (client.$inflight_init) { await client.$inflight_init(); }
        return client;
      })())
    `);
  }
  _registerBind(host, ops) {
    if (ops.includes("handle")) {
      $Closure1._registerBindObject(a, host, []);
    }
    super._registerBind(host, ops);
  }
}
let a = "hello";
new $Closure1(this,"$Closure1");


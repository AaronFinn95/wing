name: SDK Spec AWS Tests
on:
  workflow_call: {}
  release:
    types:
      - published

env:
  AWS_REGION: "us-east-1"
  RUST_VERSION: "1.67.1"
  NODE_VERSION: "18.16.0"
  PNPM_VERSION: "8.6.3"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Get list of directories
        id: setdirs
        shell: bash
        run: |
          dirs=$(ls -d examples/tests/sdk_tests/*/ | sed 's/\/$//' | grep -v "external" | jq -R -s -c 'split("\n")[:-1]')
          processed_dirs=$(echo "{ \"directory\": $dirs }" | jq -c '[ .directory[] | {directory: ., name: (split("/") | last)}]')
          wrapped_dirs=$(echo "{ \"test\": $processed_dirs }" | jq -c .)
          echo "DIRS=$wrapped_dirs" >> $GITHUB_ENV
      - name: Pass environment variable to output
        id: passenv
        run: |
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT
    outputs:
      tests: ${{ steps.passenv.outputs.dirs }}

  test-tf-aws:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.tests) }}
    name: ${{ matrix.test.name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        if: ${{github.event_name != 'release'}}
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js v18
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: ${{ env.NODE_VERSION }}
      ########################### install a local wing version ###############
      - name: Download Dist Artifacts
        if: ${{github.event_name != 'release'}}
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install Dependencies
        if: ${{github.event_name != 'release'}}
        run: pnpm install --frozen-lockfile

      ########################################################################
      - name: Install winglang globally
        if: ${{github.event_name == 'release'}}
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 5
          command: npm install -g winglang
      - name: Installing external js modules
        if: ${{github.event_name == 'release'}}
        run: |
          cd examples/tests/sdk_tests
          npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Execute wing test in matrix directory
        uses: nick-fields/retry@v2
        env:
          TF_LOG: info
          TF_LOG_PATH: ${{ runner.workspace }}/terraform.log
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 30
          command: |
            if ${{github.event_name == 'push'}}
            then
              npm install --no-package-lock ./dist/*-[0-9]*.[0-9]*.[0-9]*.tgz &&
              ./node_modules/.bin/wing test -t tf-aws ${{ matrix.test.directory }}/*.w
            else
              wing test -t tf-aws ${{ matrix.test.directory }}/*.w
            fi

      - name: Output Terraform log
        if: failure()
        run: cat ${{ runner.workspace }}/terraform.log

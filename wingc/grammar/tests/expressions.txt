====================
Unary expression
====================

+1;

---

(source_file
    (expression_statement
        expression: (unary_expression
            arg: (number)
        )
    )
)

====================
Binary expressions
====================

5 * 1;
(5+1) % 1;
5+1 % 1;
5 % 1 + 1;

---

(source_file
    (expression_statement
        expression: (binary_expression
            left: (number)
            right: (number)
        )
    )
    (expression_statement
        expression: (binary_expression
            left: (parenthesized_expression
                (binary_expression
                    left: (number)
                    right: (number)
                )
            )
            right: (number)
        )
    )
    (expression_statement
        expression: (binary_expression
            left: (number)
            right: (binary_expression
                left: (number)
                right: (number)
            )
        )
    )
    (expression_statement
        expression: (binary_expression
            left: (binary_expression
                left: (number)
                right: (number)
            )
            right: (number)
        )
    )
)

====================
Function call
====================

hello(1,a);

---

(source_file
    (expression_statement
        expression: (function_call
            call_name: (reference
                symbol: (symbol)
            )
            args: (argument_list
                (positional_argument
                    (number)
                )
                (positional_argument
                    (reference
                        symbol: (symbol)
                    )
                )
            )
        )
    )
)

====================
Method call
====================

obj.method();

---

(source_file
    (expression_statement
        expression: (method_call
            object: (reference
                symbol: (symbol)
            )
            call_name: (reference
                symbol: (symbol)
            )
            args: (argument_list)
        )
    )
)

====================
New expression
====================

new A();

---

(source_file
    (expression_statement
        expression: (new_expression
            class: (class_name)
            args: (argument_list)
        )
    )
)

---
kind: pipeline
type: docker
name: winglang

steps:
  - name: ECR login
    image: amazon/aws-cli
    environment:
      AWS_REGION:
        from_secret: aws_region
    commands:
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION > .docker-login

  - name: ECR pull
    image: docker
    environment:
      AWS_REGION:
        from_secret: aws_region
      AWS_ACCOUNT:
        from_secret: aws_account
      BUILD_IMAGE:
        from_secret: build_image
    commands:
      - cat .docker-login | docker login -u AWS --password-stdin $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com 2>/dev/null
      - rm .docker-login
      - echo $BUILD_IMAGE
      - docker pull $BUILD_IMAGE
      - docker tag $BUILD_IMAGE winglang-dev
    volumes:
      - name: dind
        path: /var/run/docker.sock

  - name: Rosetta Runtime tests
    image: winglang-dev
    pull: never
    commands:
      - |
        cat <<'EOF' | bash -e
          source ~/.bashrc
          ln -s /wingrr/vendor/node/out /drone/src/wingrr/vendor/node/out
          ln -s /wingrr/vendor/node/build /drone/src/wingrr/vendor/node/build
          cd /drone/src/wingrr
          npm ci
          npm test

        EOF

volumes:
  - name: dind
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: winglang

steps:
  - name: ECR/NPM setup
    image: amazon/aws-cli
    environment:
      NPM_TOKEN:
        from_secret: npm_token
      AWS_REGION:
        from_secret: aws_region
    commands:
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION > .docker-login
      - echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" > ~/.npmrc

  - name: ECR pull
    image: docker
    environment:
      AWS_REGION:
        from_secret: aws_region
      AWS_ACCOUNT:
        from_secret: aws_account
      DOCKER_REPO:
        from_secret: docker_repo
    commands:
      - cat .docker-login | docker login -u AWS --password-stdin $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com 2>/dev/null
      - rm .docker-login
      - docker pull $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_REPO:dev
      - docker tag $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_REPO:dev winglang-dev
    volumes:
      - name: dind
        path: /var/run/docker.sock

  - name: build and test
    image: docker
    privileged: true
    commands:
      - docker run --privileged --rm tonistiigi/binfmt --install all
      - docker buildx create --name xbuilder || exit 0
      - docker buildx use xbuilder
      - docker buildx inspect --bootstrap
      # - docker buildx build --platform=linux/arm64,linux/amd64 --tag winglang-build .
    volumes:
      - name: dind
        path: /var/run/docker.sock

volumes:
  - name: dind
    host:
      path: /var/run/docker.sock
